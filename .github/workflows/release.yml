name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up environment
      run: |
        # Install required tools
        brew install jq zip

    - name: Create release assets
      run: |
        # Create release zip file
        RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        zip -r "DgtlEnv-${RELEASE_VERSION}.zip" . \
          -x "*.git*" "*.DS_Store" "logs/*" "*.log" "node_modules/*" "*.tmp"

        # Create changelog for this release
        echo "# DgtlEnv ${RELEASE_VERSION}" > "CHANGELOG-${RELEASE_VERSION}.md"
        echo "" >> "CHANGELOG-${RELEASE_VERSION}.md"
        echo "## Release Notes" >> "CHANGELOG-${RELEASE_VERSION}.md"
        echo "" >> "CHANGELOG-${RELEASE_VERSION}.md"

        # Extract changelog for this version
        awk "/^## \\[${RELEASE_VERSION}\\]/,/^## \\[.*\\]/{if (!/^## \\[.*\\]/) print}" CHANGELOG.md >> "CHANGELOG-${RELEASE_VERSION}.md"

        echo "Release assets created:"
        ls -la *.zip *.md

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: DgtlEnv ${{ github.ref_name }}
        body: |
          ## üéâ DgtlEnv ${{ github.ref_name }} Release

          ### ‚ú® What's New
          Personal experimental project for improving environment to run modern products.

          ### üöÄ Key Features
          - **System Optimization**: Cursor IDE, Docker, and system performance tuning
          - **PDF Management**: Automated PDF to markdown conversion with file watching
          - **Health Monitoring**: Real-time system performance and health checks
          - **Automated Maintenance**: Cleanup scripts and optimization tools
          - **Security Sanitization**: Pre-release sanitizer for public releases

          ### üõ†Ô∏è System Requirements
          - macOS 12.7.6 Monterey or later
          - MacBook Pro 2015 or compatible hardware
          - Docker Desktop (optional)
          - Cursor IDE (optional)

          ### üì¶ Installation
          ```bash
          git clone https://github.com/simien/DgtlEnv.git
          cd DgtlEnv
          chmod +x ops/monitoring/swap-ssd-health.sh
          ./ops/monitoring/swap-ssd-health.sh
          ```

          ### üîß Quick Start
          1. Run system health check: `./ops/monitoring/swap-ssd-health.sh`
          2. Optimize Docker: `./ops/docker/docker-optimize.sh`
          3. Clean up system: `./ops/cleanup/brew-cleanup.sh`
          4. Convert PDFs: `./ops/backup/simple-pdf-converter.sh`

          ### üìä Performance Improvements
          - Memory usage: 34% (target: <80%)
          - CPU usage: 14% (target: <70%)
          - Disk usage: 21% (target: <85%)
          - Swap usage: 0% (target: minimal)

          ### üõ°Ô∏è Security
          - Comprehensive security audit completed
          - Personal information removed
          - Pre-release sanitizer implemented
          - Automated security workflows

          ### üìö Documentation
          - Complete setup guides
          - Optimization tutorials
          - Troubleshooting guides
          - API documentation

          ### ü§ù Contributing
          See [CONTRIBUTING.md](CONTRIBUTING.md) for guidelines.

          ### üìÑ License
          MIT License - see [LICENSE](LICENSE) for details.

          ### üôè Support
          If you find this project helpful, consider supporting its development:
          [GitHub Sponsors](https://github.com/sponsors/simien)

          ---

          **Full Changelog**: [CHANGELOG.md](CHANGELOG.md)
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DgtlEnv-${{ github.ref_name }}.zip
        asset_name: DgtlEnv-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Upload Changelog
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./CHANGELOG-${{ github.ref_name }}.md
        asset_name: CHANGELOG-${{ github.ref_name }}.md
        asset_content_type: text/markdown
